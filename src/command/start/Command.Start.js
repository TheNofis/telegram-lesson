import User from "../../db/model/User.js";

import MenuSelectGroup from "../../menu/Menu.SelectGroup.js";

export default class CommandSelect {
  constructor(bot, ctx) {
    this.bot = bot;
    this.ctx = ctx;
  }
  async handle() {
    const text = this?.ctx?.update?.message?.text;
    const chatId = this?.ctx?.update?.message?.chat?.id;

    if (text != "/start") return;

    const findUser = await User.findOne({ telegramId: chatId });

    if (findUser == null) {
      // NEW USER
      const newUser = new User({
        username: this?.ctx?.update?.message?.from?.username,
        telegramId: chatId,
      });
      newUser
        .save()
        .then(async () => {
          this.ctx.telegram.sendMessage(
            chatId,
            "‚ÑπÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n\n‚úÖ –î–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ –±–æ—Ç–µ –Ω–∞–¥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!\nüîª –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É —Å–Ω–∏–∑—É",
            await MenuSelectGroup(false),
          );
        })
        .catch(() => {
          this.ctx.telegram.sendMessage(
            chatId,
            "‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n\n‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!",
          );
        });
    }
  }
}
