import CommandClass from "./Command.Class.js";

import User from "../../db/model/User.js";
import MenuSelectMGOKGroup from "../../menu/Menu.SelectMGOKGroup.js";
import { redisClient } from "../../db/connect/redis.js";

const courses = ["1Ô∏è‚É£ –ö—É—Ä—Å", "2Ô∏è‚É£ –ö—É—Ä—Å", "3Ô∏è‚É£ –ö—É—Ä—Å", "4Ô∏è‚É£ –ö—É—Ä—Å"];
export default class CommandSelect extends CommandClass {
  isValidCommand() {
    return courses.includes(this.text);
  }

  async handle() {
    if (!this.isValidCommand()) return;

    const course = courses.indexOf(this.text);

    User.findOneAndUpdate(
      { telegramId: this.user.telegramId },
      {
        $set: {
          "mgok.course": course,
          "mgok.groupName": null,
        },
      },
      {
        new: true,
      },
    )
      .then(async (user) => {
        await redisClient
          .del(`user:${this.user.telegramId}`)
          .catch(console.error);

        this.ctx.telegram.sendMessage(
          this.chatId,
          `‚ÑπÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n\nüîª –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É —Å–Ω–∏–∑—É`,
          await MenuSelectMGOKGroup.MenuSelectGroupNoBack(user?.mgok?.course),
        );
      })
      .catch((err) => {
        console.error(err);
        this.ctx.telegram.sendMessage(
          this.chatId,
          `‚ùå –û—à–∏–±–∫–∞\n\n‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –∫—É—Ä—Å`,
        );
      });
  }
}
